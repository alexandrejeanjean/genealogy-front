{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/dev/genealogy-front/src/Screens/Login/index.tsx\";\nimport React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport apiClient from '../../api';\nimport { withUser } from '../../store/UserProvider';\nimport LocalStorageService from '../../services/LocalStorageService';\nimport LoginForm from './LoginForm';\nimport Main from '../Theme/index';\n\nfunction Login({\n  isLogged,\n  setIsLogged\n}) {\n  const history = useHistory();\n\n  const autoSignIn = async () => {\n    try {\n      const token = LocalStorageService._getAccessToken();\n\n      console.log('user :: ', token);\n\n      if (token) {\n        setIsLogged(true);\n        history.push('/dashboard');\n      }\n    } catch (err) {\n      if (err) {\n        return err;\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (!isLogged) {\n      autoSignIn();\n    }\n  }, [isLogged]);\n\n  const signIn = async credentials => {\n    try {\n      const response = await apiClient.post('/signin', credentials);\n      const user = response.data;\n      console.log('user :: ', user);\n\n      if (user.token) {\n        setIsLogged(true);\n\n        LocalStorageService._setToken(user);\n\n        return history.push('/dashboard');\n      }\n    } catch (err) {\n      if (err && err.response) {\n        const axiosError = err;\n        console.log('Error :: signin', axiosError.response);\n        return axiosError.response.data;\n      }\n\n      throw err;\n    }\n  };\n\n  return React.createElement(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(LoginForm, {\n    handleSubmit: signIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }));\n}\n\nexport default withUser(Login);","map":{"version":3,"sources":["/Users/alex/Documents/dev/genealogy-front/src/Screens/Login/index.tsx"],"names":["React","useEffect","useHistory","apiClient","withUser","LocalStorageService","LoginForm","Main","Login","isLogged","setIsLogged","history","autoSignIn","token","_getAccessToken","console","log","push","err","signIn","credentials","response","post","user","data","_setToken","axiosError"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AAEA,OAAOC,mBAAP,MAAgC,oCAAhC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;AAOA,SAASC,KAAT,CAAe;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAf,EAAiD;AAC/C,QAAMC,OAAO,GAAGT,UAAU,EAA1B;;AAEA,QAAMU,UAAU,GAAG,YAAY;AAC7B,QAAI;AACF,YAAMC,KAAK,GAAGR,mBAAmB,CAACS,eAApB,EAAd;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,KAAxB;;AACA,UAAIA,KAAJ,EAAW;AACTH,QAAAA,WAAW,CAAC,IAAD,CAAX;AACAC,QAAAA,OAAO,CAACM,IAAR,CAAa,YAAb;AACD;AACF,KAPD,CAOE,OAAOC,GAAP,EAAY;AACZ,UAAIA,GAAJ,EAAS;AACP,eAAOA,GAAP;AACD;AACF;AACF,GAbD;;AAeAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACQ,QAAL,EAAe;AACbG,MAAAA,UAAU;AACX;AACF,GAJQ,EAIN,CAACH,QAAD,CAJM,CAAT;;AAMA,QAAMU,MAAM,GAAG,MAAOC,WAAP,IAA+B;AAC5C,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMlB,SAAS,CAACmB,IAAV,CAAe,SAAf,EAA0BF,WAA1B,CAAvB;AACA,YAAMG,IAAI,GAAGF,QAAQ,CAACG,IAAtB;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBO,IAAxB;;AACA,UAAIA,IAAI,CAACV,KAAT,EAAgB;AACdH,QAAAA,WAAW,CAAC,IAAD,CAAX;;AACAL,QAAAA,mBAAmB,CAACoB,SAApB,CAA8BF,IAA9B;;AACA,eAAOZ,OAAO,CAACM,IAAR,CAAa,YAAb,CAAP;AACD;AACF,KATD,CASE,OAAOC,GAAP,EAAY;AACZ,UAAIA,GAAG,IAAIA,GAAG,CAACG,QAAf,EAAyB;AACvB,cAAMK,UAAU,GAAGR,GAAnB;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BU,UAAU,CAACL,QAA1C;AACA,eAAOK,UAAU,CAACL,QAAX,CAAoBG,IAA3B;AACD;;AAED,YAAMN,GAAN;AACD;AACF,GAnBD;;AAqBA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,YAAY,EAAEC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAED,eAAef,QAAQ,CAACI,KAAD,CAAvB","sourcesContent":["import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport apiClient from '../../api';\nimport { withUser } from '../../store/UserProvider';\n\nimport LocalStorageService from '../../services/LocalStorageService';\n\nimport LoginForm from './LoginForm';\nimport Main from '../Theme/index';\n\ntype Props = {\n  setIsLogged: Function;\n  isLogged: boolean;\n};\n\nfunction Login({ isLogged, setIsLogged }: Props) {\n  const history = useHistory();\n\n  const autoSignIn = async () => {\n    try {\n      const token = LocalStorageService._getAccessToken();\n      console.log('user :: ', token);\n      if (token) {\n        setIsLogged(true);\n        history.push('/dashboard');\n      }\n    } catch (err) {\n      if (err) {\n        return err;\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (!isLogged) {\n      autoSignIn();\n    }\n  }, [isLogged]);\n\n  const signIn = async (credentials: object) => {\n    try {\n      const response = await apiClient.post('/signin', credentials);\n      const user = response.data;\n      console.log('user :: ', user);\n      if (user.token) {\n        setIsLogged(true);\n        LocalStorageService._setToken(user);\n        return history.push('/dashboard');\n      }\n    } catch (err) {\n      if (err && err.response) {\n        const axiosError = err;\n        console.log('Error :: signin', axiosError.response);\n        return axiosError.response.data;\n      }\n\n      throw err;\n    }\n  };\n\n  return (\n    <Main>\n      <LoginForm handleSubmit={signIn} />\n    </Main>\n  );\n}\n\nexport default withUser(Login);\n"]},"metadata":{},"sourceType":"module"}